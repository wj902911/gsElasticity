/// This is the "Cook's membrane" benchmark solved using the nonlinear elasticity solver.
/// The problem description and reference solutions can be found in the Ph.D. thesis of O.Weeger
/// "Isogeometric Finite Element Analysis of Nonlinear Structural Vibrations", 2015.
///
/// Author: A.Shamanskiy (2016 - ...., TU Kaiserslautern)
#include <gismo.h>
#include <gsElasticity/gsElasticityAssembler_elasticSurface.h>
#include <gsElasticity/gsIterative.h>
#include <gsElasticity/gsIterative_multiStep.h>
#include <gsElasticity/gsWriteParaviewMultiPhysics.h>
#include <gsNurbs/gsNurbsCreator.h>

using namespace gismo;

int main(int argc, char* argv[])
{
#if 1
	real_t r = 1.0;
	real_t ir = 0.1;
	real_t x = 0.0;
	real_t y = 0.0;
	real_t z = 0.0;
	
	gsKnotVector<> KV1(0, 1, 0, 5);
	gsKnotVector<> KV2(0, 1, 0, 5);
	//gsKnotVector<> KV3(0, 1, 0, 2);
	//gsMatrix<real_t> C(50, 3);
	gsMatrix<real_t> C(25, 3);
	gsMatrix<real_t> C1(25, 3);
	//gsMatrix<real_t> C2(25, 3);
	gsMatrix<real_t> CTemp(25, 3);
	//gsMatrix<real_t> W(50, 1);
	gsMatrix<real_t> W(25, 1);

	/*
	W <<
		5.0717967697244912, 4.5200421036033447, 4.3572655899081640, 4.5200421036033447, 5.0717967697244912,
		4.5200421036033447, 3.8660254037844384, 3.6449237056739161, 3.8660254037844384, 4.5200421036033447,
		4.3572655899081640, 3.6449237056739161, 3.4045573501530604, 3.6449237056739161, 4.3572655899081640,
		4.5200421036033447, 3.8660254037844384, 3.6449237056739161, 3.8660254037844384, 4.5200421036033447,
		5.0717967697244912, 4.5200421036033447, 4.3572655899081640, 4.5200421036033447, 5.0717967697244912,
		5.0717967697244912, 4.5200421036033447, 4.3572655899081640, 4.5200421036033447, 5.0717967697244912,
		4.5200421036033447, 3.8660254037844384, 3.6449237056739161, 3.8660254037844384, 4.5200421036033447,
		4.3572655899081640, 3.6449237056739161, 3.4045573501530604, 3.6449237056739161, 4.3572655899081640,
		4.5200421036033447, 3.8660254037844384, 3.6449237056739161, 3.8660254037844384, 4.5200421036033447,
		5.0717967697244912, 4.5200421036033447, 4.3572655899081640, 4.5200421036033447, 5.0717967697244912;
	*/
	
	
	W <<
		5.0717967697244912, 4.5200421036033447, 4.3572655899081640, 4.5200421036033447, 5.0717967697244912,
		4.5200421036033447, 3.8660254037844384, 3.6449237056739161, 3.8660254037844384, 4.5200421036033447,
		4.3572655899081640, 3.6449237056739161, 3.4045573501530604, 3.6449237056739161, 4.3572655899081640,
		4.5200421036033447, 3.8660254037844384, 3.6449237056739161, 3.8660254037844384, 4.5200421036033447,
		5.0717967697244912, 4.5200421036033447, 4.3572655899081640, 4.5200421036033447, 5.0717967697244912;

	//bottom
	CTemp <<
		-0.57735026918962562, -0.57735026918962562, -0.57735026918962562, 
		-0.31287619229159269, -0.70958730763864231, -0.70958730763864231, 
		 0.00000000000000000, -0.75402078491454050, -0.75402078491454050,
		 0.31287619229159269, -0.70958730763864231, -0.70958730763864231, 
		 0.57735026918962562, -0.57735026918962562, -0.57735026918962562, 
		
		-0.70958730763864231, -0.31287619229159269, -0.70958730763864231,
		-0.41336412579931964, -0.41336412579931964, -1.00000000000000000, 
		 0.00000000000000000, -0.45730408049064641, -1.12004618869897940, 
		 0.41336412579931964, -0.41336412579931964, -1.00000000000000000,
		 0.70958730763864231, -0.31287619229159269, -0.70958730763864231,
		
		-0.75402078491454050,  0.00000000000000000, -0.75402078491454050,
		-0.45730408049064641,  0.00000000000000000, -1.12004618869897940,
		 0.00000000000000000,  0.00000000000000000, -1.27983321817512400,
		 0.45730408049064641,  0.00000000000000000, -1.12004618869897940,
		 0.75402078491454050,  0.00000000000000000, -0.75402078491454050,
		
		-0.70958730763864231,  0.31287619229159269, -0.70958730763864231,
		-0.41336412579931964,  0.41336412579931964, -1.00000000000000000,
		 0.00000000000000000,  0.45730408049064641, -1.12004618869897940,
		 0.41336412579931964,  0.41336412579931964, -1.00000000000000000,
		 0.70958730763864231,  0.31287619229159269, -0.70958730763864231,
		
		-0.57735026918962562,  0.57735026918962562, -0.57735026918962562,
		-0.31287619229159269,  0.70958730763864231, -0.70958730763864231,
		 0.00000000000000000,  0.75402078491454050, -0.75402078491454050,
		 0.31287619229159269,  0.70958730763864231, -0.70958730763864231,
		 0.57735026918962562,  0.57735026918962562, -0.57735026918962562;
	
	C1 << CTemp * r;
	//C2 << CTemp * ir;
	//C << C2, C1;
	C << C1;
	
	C.col(0).array() += x;
	C.col(1).array() += y;
	C.col(2).array() += z;

	//gsTensorNurbs<3, real_t> patch1(KV1, KV2, KV3, C, W);
	gsTensorNurbs<2, real_t> patch1(KV1, KV2, C, W);
	
	/*
	//top
	CTemp <<
		-0.57735026918962562, -0.57735026918962562,  0.57735026918962562, 
		-0.31287619229159269, -0.70958730763864231,  0.70958730763864231, 
		 0.00000000000000000, -0.75402078491454050,  0.75402078491454050,
		 0.31287619229159269, -0.70958730763864231,  0.70958730763864231, 
		 0.57735026918962562, -0.57735026918962562,  0.57735026918962562, 
		
		-0.70958730763864231, -0.31287619229159269,  0.70958730763864231,
		-0.41336412579931964, -0.41336412579931964,  1.00000000000000000, 
		 0.00000000000000000, -0.45730408049064641,  1.12004618869897940, 
		 0.41336412579931964, -0.41336412579931964,  1.00000000000000000,
		 0.70958730763864231, -0.31287619229159269,  0.70958730763864231,
		
		-0.75402078491454050,  0.00000000000000000,  0.75402078491454050,
		-0.45730408049064641,  0.00000000000000000,  1.12004618869897940,
		 0.00000000000000000,  0.00000000000000000,  1.27983321817512400,
		 0.45730408049064641,  0.00000000000000000,  1.12004618869897940,
		 0.75402078491454050,  0.00000000000000000,  0.75402078491454050,
		
		-0.70958730763864231,  0.31287619229159269,  0.70958730763864231,
		-0.41336412579931964,  0.41336412579931964,  1.00000000000000000,
		 0.00000000000000000,  0.45730408049064641,  1.12004618869897940,
		 0.41336412579931964,  0.41336412579931964,  1.00000000000000000,
		 0.70958730763864231,  0.31287619229159269,  0.70958730763864231,
		
		-0.57735026918962562,  0.57735026918962562,  0.57735026918962562,
		-0.31287619229159269,  0.70958730763864231,  0.70958730763864231,
		 0.00000000000000000,  0.75402078491454050,  0.75402078491454050,
		 0.31287619229159269,  0.70958730763864231,  0.70958730763864231,
		 0.57735026918962562,  0.57735026918962562,  0.57735026918962562;

	
	C1 << CTemp * r;
	C2 << CTemp * ir;
	C << C2, C1;

	C.col(0).array() += x;
	C.col(1).array() += y;
	C.col(2).array() += z;

	gsTensorNurbs<3, real_t> patch2(KV1, KV2, KV3, C, W);
	
	//front
	CTemp <<
		-0.57735026918962562, -0.57735026918962562, -0.57735026918962562, 
		-0.31287619229159269, -0.70958730763864231, -0.70958730763864231, 
		 0.00000000000000000, -0.75402078491454050, -0.75402078491454050,
		 0.31287619229159269, -0.70958730763864231, -0.70958730763864231, 
		 0.57735026918962562, -0.57735026918962562, -0.57735026918962562, 
		
		-0.70958730763864231, -0.70958730763864231, -0.31287619229159269,
		-0.41336412579931964, -1.00000000000000000, -0.41336412579931964,
		 0.00000000000000000, -1.12004618869897940, -0.45730408049064641,
		 0.41336412579931964, -1.00000000000000000, -0.41336412579931964,
		 0.70958730763864231, -0.70958730763864231, -0.31287619229159269,
		
		-0.75402078491454050, -0.75402078491454050,  0.00000000000000000,
		-0.45730408049064641, -1.12004618869897940,  0.00000000000000000,
		 0.00000000000000000, -1.27983321817512400,  0.00000000000000000,
		 0.45730408049064641, -1.12004618869897940,  0.00000000000000000,
		 0.75402078491454050, -0.75402078491454050,  0.00000000000000000,
		
		-0.70958730763864231, -0.70958730763864231,  0.31287619229159269,
		-0.41336412579931964, -1.00000000000000000,  0.41336412579931964,
		 0.00000000000000000, -1.12004618869897940,  0.45730408049064641,
		 0.41336412579931964, -1.00000000000000000,  0.41336412579931964,
		 0.70958730763864231, -0.70958730763864231,  0.31287619229159269,
		
		-0.57735026918962562, -0.57735026918962562,  0.57735026918962562,
		-0.31287619229159269, -0.70958730763864231,  0.70958730763864231,
		 0.00000000000000000, -0.75402078491454050,  0.75402078491454050,
		 0.31287619229159269, -0.70958730763864231,  0.70958730763864231,
		 0.57735026918962562, -0.57735026918962562,  0.57735026918962562;

	
	C1 << CTemp * r;
	C2 << CTemp * ir;
	C << C2, C1;

	C.col(0).array() += x;
	C.col(1).array() += y;
	C.col(2).array() += z;

	gsTensorNurbs<3, real_t> patch3(KV1, KV2, KV3, C, W);
	
	//back
	CTemp <<
		-0.57735026918962562,  0.57735026918962562, -0.57735026918962562, 
		-0.31287619229159269,  0.70958730763864231, -0.70958730763864231, 
		 0.00000000000000000,  0.75402078491454050, -0.75402078491454050,
		 0.31287619229159269,  0.70958730763864231, -0.70958730763864231, 
		 0.57735026918962562,  0.57735026918962562, -0.57735026918962562, 
		
		-0.70958730763864231,  0.70958730763864231, -0.31287619229159269,
		-0.41336412579931964,  1.00000000000000000, -0.41336412579931964,
		 0.00000000000000000,  1.12004618869897940, -0.45730408049064641,
		 0.41336412579931964,  1.00000000000000000, -0.41336412579931964,
		 0.70958730763864231,  0.70958730763864231, -0.31287619229159269,
		
		-0.75402078491454050,  0.75402078491454050,  0.00000000000000000,
		-0.45730408049064641,  1.12004618869897940,  0.00000000000000000,
		 0.00000000000000000,  1.27983321817512400,  0.00000000000000000,
		 0.45730408049064641,  1.12004618869897940,  0.00000000000000000,
		 0.75402078491454050,  0.75402078491454050,  0.00000000000000000,
		
		-0.70958730763864231,  0.70958730763864231,  0.31287619229159269,
		-0.41336412579931964,  1.00000000000000000,  0.41336412579931964,
		 0.00000000000000000,  1.12004618869897940,  0.45730408049064641,
		 0.41336412579931964,  1.00000000000000000,  0.41336412579931964,
		 0.70958730763864231,  0.70958730763864231,  0.31287619229159269,
		
		-0.57735026918962562,  0.57735026918962562,  0.57735026918962562,
		-0.31287619229159269,  0.70958730763864231,  0.70958730763864231,
		 0.00000000000000000,  0.75402078491454050,  0.75402078491454050,
		 0.31287619229159269,  0.70958730763864231,  0.70958730763864231,
		 0.57735026918962562,  0.57735026918962562,  0.57735026918962562;

	
	C1 << CTemp * r;
	C2 << CTemp * ir;
	C << C2, C1;

	C.col(0).array() += x;
	C.col(1).array() += y;
	C.col(2).array() += z;

	gsTensorNurbs<3, real_t> patch4(KV1, KV2, KV3, C, W);

	//left
	CTemp <<
		-0.57735026918962562, -0.57735026918962562,  0.57735026918962562,
		-0.70958730763864231, -0.70958730763864231,  0.31287619229159269,
		-0.75402078491454050, -0.75402078491454050,  0.00000000000000000,
		-0.70958730763864231, -0.70958730763864231, -0.31287619229159269,
		-0.57735026918962562, -0.57735026918962562, -0.57735026918962562,
		
		-0.70958730763864231, -0.31287619229159269,  0.70958730763864231,
		-1.00000000000000000, -0.41336412579931964,  0.41336412579931964,
		-1.12004618869897940, -0.45730408049064641,  0.00000000000000000,
		-1.00000000000000000, -0.41336412579931964, -0.41336412579931964,
		-0.70958730763864231, -0.31287619229159269, -0.70958730763864231,
		
		-0.75402078491454050,  0.00000000000000000,  0.75402078491454050,
		-1.12004618869897940,  0.00000000000000000,  0.45730408049064641,
		-1.27983321817512400,  0.00000000000000000,  0.00000000000000000,
		-1.12004618869897940,  0.00000000000000000, -0.45730408049064641,
		-0.75402078491454050,  0.00000000000000000, -0.75402078491454050,
		
		-0.70958730763864231,  0.31287619229159269,  0.70958730763864231,
		-1.00000000000000000,  0.41336412579931964,  0.41336412579931964,
		-1.12004618869897940,  0.45730408049064641,  0.00000000000000000,
		-1.00000000000000000,  0.41336412579931964, -0.41336412579931964,
		-0.70958730763864231,  0.31287619229159269, -0.70958730763864231,
		
		-0.57735026918962562,  0.57735026918962562,  0.57735026918962562,
		-0.70958730763864231,  0.70958730763864231,  0.31287619229159269,
		-0.75402078491454050,  0.75402078491454050,  0.00000000000000000,
		-0.70958730763864231,  0.70958730763864231, -0.31287619229159269,
		-0.57735026918962562,  0.57735026918962562, -0.57735026918962562;

	
	C1 << CTemp * r;
	C2 << CTemp * ir;
	C << C2, C1;

	C.col(0).array() += x;
	C.col(1).array() += y;
	C.col(2).array() += z;

	gsTensorNurbs<3, real_t> patch5(KV1, KV2, KV3, C, W);

	//right
	CTemp <<
		0.57735026918962562, -0.57735026918962562,  0.57735026918962562,
		0.70958730763864231, -0.70958730763864231,  0.31287619229159269,
		0.75402078491454050, -0.75402078491454050,  0.00000000000000000,
		0.70958730763864231, -0.70958730763864231, -0.31287619229159269,
		0.57735026918962562, -0.57735026918962562, -0.57735026918962562,
		
		0.70958730763864231, -0.31287619229159269,  0.70958730763864231,
		1.00000000000000000, -0.41336412579931964,  0.41336412579931964,
		1.12004618869897940, -0.45730408049064641,  0.00000000000000000,
		1.00000000000000000, -0.41336412579931964, -0.41336412579931964,
		0.70958730763864231, -0.31287619229159269, -0.70958730763864231,
		
		0.75402078491454050,  0.00000000000000000,  0.75402078491454050,
		1.12004618869897940,  0.00000000000000000,  0.45730408049064641,
		1.27983321817512400,  0.00000000000000000,  0.00000000000000000,
		1.12004618869897940,  0.00000000000000000, -0.45730408049064641,
		0.75402078491454050,  0.00000000000000000, -0.75402078491454050,
		
		0.70958730763864231,  0.31287619229159269,  0.70958730763864231,
		1.00000000000000000,  0.41336412579931964,  0.41336412579931964,
		1.12004618869897940,  0.45730408049064641,  0.00000000000000000,
		1.00000000000000000,  0.41336412579931964, -0.41336412579931964,
		0.70958730763864231,  0.31287619229159269, -0.70958730763864231,
		
		0.57735026918962562,  0.57735026918962562,  0.57735026918962562,
		0.70958730763864231,  0.70958730763864231,  0.31287619229159269,
		0.75402078491454050,  0.75402078491454050,  0.00000000000000000,
		0.70958730763864231,  0.70958730763864231, -0.31287619229159269,
		0.57735026918962562,  0.57735026918962562, -0.57735026918962562;

	
	C1 << CTemp * r;
	C2 << CTemp * ir;
	C << C2, C1;

	C.col(0).array() += x;
	C.col(1).array() += y;
	C.col(2).array() += z;

	gsTensorNurbs<3, real_t> patch6(KV1, KV2, KV3, C, W);
	*/
	
#endif
	//std::string filename = ELAST_DATA_DIR"/fitting_out.xml";
	
	gsMultiPatch<> mp;
	//gsReadFile<>(filename, mp);
	mp.addPatch(patch1);
	//mp.addPatch(patch2);
	//mp.addPatch(patch3);
	//mp.addPatch(patch4);
	//mp.addPatch(patch5);
	//mp.addPatch(patch6);
	gsMultiBasis<> basisDisplacement(mp);
	basisDisplacement.degreeReduce();
	basisDisplacement.degreeReduce();
	
	gsMesh<> CN;
	//gsMesh<real_t> mesh(basis, resolution);
	mp[0].controlNet(CN);
	//mp[0].evaluateMesh(mesh);
	gsWriteParaview(basisDisplacement, "Geometry",10000);
	gsWriteParaview(CN, "ContolNet");
	//gsWriteParaview(mesh, "Mesh");

	//gsMultiPatch<> mp2;
	//mp2.addPatch(gsNurbsCreator<>::NurbsSphere());
	//gsWriteParaview(mp2, "Sphere", 10000);

	
	return 0;
}
